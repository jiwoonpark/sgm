<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.main.dao.TdInterface">

	<!-- 리스트보이기 -->
	<select id="listCall" resultType="com.spring.main.dto.TdDto">
		SELECT idx,j_idx,u_idx,j_name,j_category,j_title,j_content,j_date,j_filenum,j_vcount,j_reple
			FROM (
				SELECT idx,j_idx,u_idx,j_name,j_category,j_title,j_content,j_date,j_filenum,j_vcount,j_reple,
				ROW_NUMBER() OVER(ORDER BY j_idx DESC)AS rnum FROM board WHERE j_category=#{param3}
				)WHERE rnum BETWEEN #{param1} AND #{param2}
	</select>
	
	<!-- 게시물 수 -->
	<select id="allCount" resultType="Integer">
		SELECT COUNT(*) FROM board WHERE j_category = #{param1}
	</select>
	
	<!-- 검색리스트보이기 -->
	<select id="search" resultType="com.spring.main.dto.TdDto">
		SELECT idx,j_idx,u_idx,j_name,j_category,j_title,j_content,j_date,j_filenum,j_vcount,j_reple
			FROM (
				SELECT idx,j_idx,u_idx,j_name,j_category,j_title,j_content,j_date,j_filenum,j_vcount,j_reple,
				ROW_NUMBER() OVER(ORDER BY j_idx DESC)AS rnum FROM board 
				WHERE j_category=#{param3} AND ${param4} LIKE '%'||#{param5}||'%'
				)WHERE rnum BETWEEN #{param1} AND #{param2}
	</select>
	
	<!-- 검색수 -->
	<select id="searchCount" resultType="Integer">
		SELECT COUNT(*) FROM board WHERE j_category = #{param1} AND ${param2} LIKE '%'||#{param3}||'%'
	</select>
	
	<!-- 파일올리기 -->
	<insert id="fileUp">
		INSERT INTO forder(f_idx,idx,f_category,f_filename,f_newfilename)
		VALUES(forder_num.NEXTVAL,#{param1},#{param2},#{param3},#{param4})
	</insert>
	
	<!-- idx받아오기 -->
	<select id="idxCall" resultType="String">
        SELECT board_num.NEXTVAL FROM DUAL
    </select>
	
	<!-- 글쓰기 -->
	<insert id="write">
		INSERT INTO board(idx,j_idx,u_idx,j_category,j_name,j_title,j_content,j_filenum,j_vcount,j_reple)
		VALUES(#{param1},td_num.NEXTVAL,#{param2},#{param3},#{param4},#{param5},#{param6},0,0,0)
	</insert>
	
	<!-- 개인기록 -->
	<insert id="record">
		INSERT INTO personal_record(p_idx,idx,m_idx,p_offside,p_effectshot,p_goal,p_assist,p_atkpoint,
		p_shoot,p_poul,p_warning,p_off,p_ck,p_pk,p_date)
		VALUES(pr_num.NEXTVAL,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},#{param7},
		#{param8},#{param9},#{param10},#{param11},#{param12},#{param13},#{param14})
	</insert>
	
	<!-- 포인트,경기수 Up -->
	<update id="point">
		UPDATE memver SET m_matchcount = m_matchcount+1, m_tpoint = m_tpoint+#{param1} WHERE u_idx = #{param2}
	</update>
	
	<!-- 멤버목록 -->
	<select id="member" resultType="com.spring.main.dto.MemberDto">
		SELECT m_idx,u_idx,m_name FROM memver WHERE t_idx = #{param1}
	</select>
	<!-- 조회수 올리기 -->
	<update id="upHit">
		UPDATE board SET j_vcount = j_vcount+1 WHERE idx = #{param1}
	</update>
	
	<!-- 팀잉지상세 -->
	<select id="tdDetail" resultType="com.spring.main.dto.TdDto">
		SELECT * FROM board WHERE idx = #{param1}
	</select>
	
	<!-- 개인기록-->
	<select id="tdRecord" resultType="com.spring.main.dto.PrDto">
		SELECT e.m_name, d.p_offside,d.p_effectshot,d.p_goal,d.p_assist,d.p_atkpoint,
		d.p_shoot,d.p_poul,d.p_warning,d.p_off,d.p_ck,d.p_pk,d.p_date 
		FROM personal_record d, memver e WHERE e.m_idx = d.m_idx AND d.idx=#{param1}
	</select>
	
	<!-- 파일명불러오기 -->
	<select id="fileCall" resultType="com.spring.main.dto.FileDto">
		SELECT f_idx,f_newfilename,f_filename FROM forder WHERE idx = #{param1}
	</select>
	
	<!-- 삭제할 파일명 -->
	<select id="fileDelName" resultType="String">
		SELECT f_newfilename FROM forder WHERE idx = #{param1}
	</select>
	
	<!-- 글삭제 -->
	<delete id="delete">
		DELETE FROM board WHERE idx = #{param1}
	</delete>
	
	<!-- 글삭제 -->
	<delete id="recordDel">
		DELETE FROM personal_record WHERE idx = #{param1}
	</delete>
	
	<!-- 포인트,경기수 Dn -->
	<update id="pointDel">
		UPDATE memver SET m_matchcount = m_matchcount-1, m_tpoint = m_tpoint-#{param1} 
		WHERE u_idx = #{param2}
	</update>
	
	<!-- 수정페이지 개인기록  -->
	<select id="modifyRec" resultType="com.spring.main.dto.PrDto">
		SELECT e.m_idx, e.m_name,d.p_offside,d.p_effectshot,d.p_goal,d.p_assist,
		d.p_atkpoint,d.p_shoot,d.p_poul,d.p_warning,d.p_off,d.p_ck,d.p_pk,d.p_date 
		FROM memver e LEFT OUTER JOIN (SELECT * FROM personal_record WHERE idx = #{param2}) d 
		ON e.m_idx = d.m_idx WHERE t_idx =#{param1}ORDER BY d.p_date ASC
	</select>
	
	<!-- 삭제할 멤버 정보  -->
	<select id="delMember" resultType="com.spring.main.dto.PrDto">
		SELECT m_idx,p_atkpoint FROM personal_record WHERE idx =#{param1}
	</select>
</mapper>